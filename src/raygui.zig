const Rectangle = @import("ext/structs.zig").Rectangle;
const Color = @import("ext/color.zig").Color;
const Vector2 = @import("ext/vector.zig").Vector2;
const Vector3 = @import("ext/vector.zig").Vector3;
pub extern fn GuiGetState() c_int;
pub extern fn GuiGetStyle(control: c_int, property: c_int) c_int;
pub extern fn GuiIsLocked() bool;
pub extern fn GuiSetAlpha(alpha: f32) void;
pub extern fn GuiWindowBox(bounds: Rectangle, title: [*c]const u8) bool;
pub extern fn GuiGroupBox(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiLine(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiPanel(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiTabBar(bounds: Rectangle, text: [*c][*c]const u8, count: c_int, active: [*c]c_int) bool;
pub extern fn GuiScrollPanel(bounds: Rectangle, text: [*c]const u8, content: Rectangle, scroll: [*c]Vector2, view: [*c]Rectangle) bool;
pub extern fn GuiLabel(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiButton(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiLabelButton(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiToggle(bounds: Rectangle, text: [*c]const u8, active: [*c]bool) bool;
pub extern fn GuiToggleGroup(bounds: Rectangle, text: [*c]const u8, active: [*c]c_int) bool;
pub extern fn GuiToggleSlider(bounds: Rectangle, text: [*c]const u8, active: [*c]c_int) bool;
pub extern fn GuiCheckBox(bounds: Rectangle, text: [*c]const u8, checked: [*c]bool) bool;
pub extern fn GuiComboBox(bounds: Rectangle, text: [*c]const u8, active: [*c]c_int) bool;
pub extern fn GuiDropdownBox(bounds: Rectangle, text: [*c]const u8, active: [*c]c_int, editMode: bool) bool;
pub extern fn GuiSpinner(bounds: Rectangle, text: [*c]const u8, value: [*c]c_int, minValue: c_int, maxValue: c_int, editMode: bool) bool;
pub extern fn GuiValueBox(bounds: Rectangle, text: [*c]const u8, value: [*c]c_int, minValue: c_int, maxValue: c_int, editMode: bool) bool;
pub extern fn GuiValueBoxFloat(bounds: Rectangle, text: [*c]const u8, textValue: [*c]u8, value: [*c]f32, editMode: bool) bool;
pub extern fn GuiTextBox(bounds: Rectangle, text: [*c]u8, textSize: c_int, editMode: bool) bool;
pub extern fn GuiSlider(bounds: Rectangle, textLeft: [*c]const u8, textRight: [*c]const u8, value: [*c]f32, minValue: f32, maxValue: f32) bool;
pub extern fn GuiSliderBar(bounds: Rectangle, textLeft: [*c]const u8, textRight: [*c]const u8, value: [*c]f32, minValue: f32, maxValue: f32) bool;
pub extern fn GuiProgressBar(bounds: Rectangle, textLeft: [*c]const u8, textRight: [*c]const u8, value: [*c]f32, minValue: f32, maxValue: f32) bool;
pub extern fn GuiStatusBar(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiDummyRec(bounds: Rectangle, text: [*c]const u8) bool;
pub extern fn GuiGrid(bounds: Rectangle, text: [*c]const u8, spacing: f32, subdivs: c_int, mouseCell: [*c]Vector2) bool;
pub extern fn GuiListView(bounds: Rectangle, text: [*c]const u8, scrollIndex: [*c]c_int, active: [*c]c_int) bool;
pub extern fn GuiListViewEx(bounds: Rectangle, text: [*c][*c]const u8, count: c_int, scrollIndex: [*c]c_int, active: [*c]c_int, focus: [*c]c_int) bool;
pub extern fn GuiMessageBox(bounds: Rectangle, title: [*c]const u8, message: [*c]const u8, buttons: [*c]const u8) bool;
pub extern fn GuiTextInputBox(bounds: Rectangle, title: [*c]const u8, message: [*c]const u8, buttons: [*c]const u8, text: [*c]u8, textMaxSize: c_int, secretViewActive: [*c]bool) bool;
pub extern fn GuiColorPicker(bounds: Rectangle, text: [*c]const u8, color: [*c]Color) bool;
pub extern fn GuiColorPanel(bounds: Rectangle, text: [*c]const u8, color: [*c]Color) bool;
pub extern fn GuiColorBarAlpha(bounds: Rectangle, text: [*c]const u8, alpha: [*c]f32) bool;
pub extern fn GuiColorBarHue(bounds: Rectangle, text: [*c]const u8, value: [*c]f32) bool;
pub extern fn GuiColorPickerHSV(bounds: Rectangle, text: [*c]const u8, colorHsv: [*c]Vector3) bool;
pub extern fn GuiColorPanelHSV(bounds: Rectangle, text: [*c]const u8, colorHsv: [*c]Vector3) bool;
